[
  {
    "agent-name": "GeneralAssistant",
    "capability": "Perform generic tasks related to information extraction and telling time. Note that this is not a catch-all agent",
    "skills": [
      {
        "skill-name": "getCurrentTime",
        "objective": "Tell time at a given location. But first, area_location needs to be determined",
        "action": "getCurrentTime",
        "parameters": {
          "area_location": "string | Based on the valid location provided, determine appropriate area_location. e.g. area_location for Columbus, OH is America/New_York or for London is Europe/London"
        }
      },
      {
        "skill-name": "extractSpecificValue",
        "objective": "When a large corpus of information is provided, this skill can extract specific information from it",
        "action": "extractSpecificValue",
        "parameters": {
          "corpus": "string | text corpus",
          "question": "string | frame a detailed question asking specific value to be extracted from the corpus"
        }
      },
      {
        "skill-name": "extractList",
        "objective": "Extract list of similar items in specified category from a large corpus of information",
        "action": "extractList",
        "parameters": {
          "corpus": "string | text corpus",
          "item_category": "string | frame a question asking elements of specific category to be extracted from the corpus"
        }
      },
      {
        "skill-name": "readWebPage",
        "objective": "Read the contents of a given web page",
        "action": "readWebPage",
        "parameters": {
          "url": "string | web page address"
        }
      }
    ],
    "config": {}
  },
  {
    "agent-name": "Aviator",
    "capability": "Aviator can find the status of a specific flight number or for multiple flights between two airports",
    "skills": [
      {
        "skill-name": "departingFlights",
        "objective": "Retreive flights departing from specified airport",
        "action": "departingFlights",
        "parameters": {
          "iata_departure": "string | must be an IATA airport code from where flight originates, e.g. CMH for Port Columbus International Airport"
        }
      },
      {
        "skill-name": "arrivingFlights",
        "objective": "Retreive flights arriving into specified airport",
        "action": "arrivingFlights",
        "parameters": {
          "iata_arrival": "string | must be an IATA airport code from where flight lands, e.g. CMH for Port Columbus International Airport"
        }
      },
      {
        "skill-name": "specificFlight",
        "objective": "Retreive flight details about a specific flight",
        "action": "specificFlight",
        "parameters": {
          "iata_flight_number": "string | must be an IATA flight number, e.g. IATA flight number for flight 'United 5532' is 'UA5532'"
        }
      }
    ],
    "config": {
      "aviationstack": {
        "api_key": "?"
      }
    }
  },
  {
    "agent-name": "CineExpert",
    "capability": "An expert on Movies who knows everything from movie details, directors, actors and to some extent user reviews",
    "skills": [
      {
        "skill-name": "exploreCineWorld",
        "objective": "ask anything about movie(s), genre, director(s), and actor(s)",
        "action": "exploreCineWorld",
        "parameters": {
          "requirement": "string | form a detailed statement of requirement that can be used to generate a Cypher query and retrieve information from knowledge graph database"
        }
      }
    ],
    "config": {
      "neo4j": {
        "uri": "neo4j+s://??",
        "user": "??",
        "key": "??"
      }
    }
  },
  {
    "agent-name": "FinancialAnalyst",
    "capability": "Research the company fundamentals to help analyze company's performance",
    "skills": [
      {
        "skill-name": "companyProfile",
        "objective": "Lean more about a company such as what they do, their HQ location, market capitalization, and who's who",
        "action": "companyProfile",
        "parameters": {
          "stock_symbol": "string | Stock Symbol for the speficied company, e.g. MSFT for Microsoft"
        }
      },
      {
        "skill-name": "incomeStatement",
        "objective": "Obtain the income statement for specified company. It focuses on the revenue, expenses, gains, and losses of a company during a particular period. An income statement provides valuable insights into a companyâ€™s operations, the efficiency of its management, underperforming sectors, and its performance relative to industry peers",
        "action": "incomeStatement",
        "parameters": {
          "stock_symbol": "string | Stock Symbol for the speficied company, e.g. MSFT for Microsoft"
        }
      },
      {
        "skill-name": "balanceSheet",
        "objective": "Obtain the balance sheet for specified company. It reports a company's assets, liabilities, and shareholder equity. The balance sheet adheres to an equation where Assets equal sum of Liabilities and Equity. Fundamental analysts use balance sheets to calculate financial ratios",
        "action": "balanceSheet",
        "parameters": {
          "stock_symbol": "string | Stock Symbol for the speficied company, e.g. MSFT for Microsoft"
        }
      },
      {
        "skill-name": "cashFlowStatement",
        "objective": "Obtain the cash flow statement (CFS) for specified company. It not only summarizes the amount of cash and cash equivalents entering and leaving a company, but also highlights how well a company generates cash. The main components of the CFS are cash in and out from three major areas, viz. Operating, Investing, and Financing activities",
        "action": "cashFlowStatement",
        "parameters": {
          "stock_symbol": "string | Stock Symbol for the speficied company, e.g. MSFT for Microsoft"
        }
      },
      {
        "skill-name": "historicalStockPrices",
        "objective": "Analyze stock prices for a valid listed company over past few days",
        "action": "historicalStockPrices",
        "parameters": {
          "stock_symbol": "string | Stock Symbol for the speficied company, e.g. MSFT for Microsoft",
          "number_records": "number | Specify number of records to present | default value = 7"
        }
      }
    ],
    "config": {
      "financialmodelingprep": {
        "api_key": "?"
      }
    }
  },
  {
    "agent-name": "NewsReporter",
    "capability": "Report top news headlines in specific categories from specific countries",
    "skills": [
      {
        "skill-name": "getHeadlines",
        "objective": "Retrieve top news headlines for the specified country and specified category",
        "action": "getHeadlines",
        "parameters": {
          "country_code": "string | 2-letter country code based on ISO 3166, e.g. US for USA, IN for India, etc. | default=us",
          "category": "pick only one amongst - business|entertainment|general|health|science|sports|technology | default=general"
        }
      }
    ],
    "config": {
      "newsapi": {
        "api_key": "?"
      }
    }
  },
  {
    "agent-name": "Randomizer",
    "capability": "Supports all requirements where any form of randomness is required; from tossing a coin or rolling a dice to generating random topics or names, and many more random things. Hint: user request may include words like 'think of', 'imagine', 'suggest', etc.",
    "skills": [
      {
        "skill-name": "flipCoin",
        "objective": "Flip a coin to get heads or tails",
        "action": "flipCoin",
        "parameters": {}
      },
      {
        "skill-name": "rollDie",
        "objective": "Roll some die. You can roll one dice or more die specified in numDie",
        "action": "rollDie",
        "parameters": {
          "numDie": "number | number of die that are rolled, Minimum=1, Default=1"
        }
      },
      {
        "skill-name": "randomPlace",
        "objective": "Pick a random place of specified type. if an optional neighborhood or gaeographic area is provided, the place must be around it",
        "action": "randomPlace",
        "parameters": {
          "placeType": "string | type of place, e.g. city, tourist spot, island, country, etc.",
          "neighborhood": "(optional) string | place must be around this location or geapraphical area, e.g. near Sydney, on Bali island, not on an island, within asian continent, etc. Default='around the globe'"
        }
      },
      {
        "skill-name": "randomName",
        "objective": "Pick a random name (proper noun) of specified type. if optional additional attributes are specified, take that into consideration as well",
        "action": "randomName",
        "parameters": {
          "nameType": "string | type of name, e.g. boy, girl, company, pet, etc.",
          "attributes": "(optional) string | additional attributes, e.g. begining with letter A, from Indian origin, that rhymes with dorm etc. Default='has no special requirements'"
        }
      },
      {
        "skill-name": "randomColor",
        "objective": "Suggest a random color with it's appropriate hash code",
        "action": "randomColor",
        "parameters": {}
      }
    ],
    "config": {}
  },
  {
    "agent-name": "Researcher",
    "capability": "Looks up information using external information providers",
    "skills": [
      {
        "skill-name": "researchTopic",
        "objective": "Search internet for information about the given topic",
        "action": "researchTopic",
        "parameters": {
          "topic": "string | topic that must be researched"
        }
      }
    ],
    "config": {
      "google_search_engine": {
        "programmable_search_engine_id": "?",
        "api_key": "?"
      }
    }
  },
  {
    "agent-name": "Weatherman",
    "capability": "Reports current weather conditions and forecast over next week",
    "skills": [
      {
        "skill-name": "currentWeather",
        "objective": "Obtain current weather conditions for a location",
        "action": "currentWeather",
        "parameters": {
          "city": "string | valid and recognizable City name without State or State Code. e.g. Columbus"
        }
      },
      {
        "skill-name": "weatherForecast",
        "objective": "Get weather forecast for the next week for the given location",
        "action": "weatherForecast",
        "parameters": {
          "city": "string | valid and recognizable City name without State or State Code. e.g. Columbus"
        }
      }
    ],
    "config": {
      "openweathermap": {
        "api_key": "?"
      }
    }
  },
  {
    "agent-name": "Writer",
    "capability": "Aptly drafts messages and responses for all occasions, such as - email, SMS, interview, present a point-of-view, etc.",
    "skills": [
      {
        "skill-name": "translate",
        "objective": "translate original text into another language. original formatting must be retained",
        "action": "translate",
        "parameters": {
          "originalText": "string | this text must be translated into another language",
          "language": "string | language to be translated into"
        }
      },
      {
        "skill-name": "composeEmail",
        "objective": "write an email message to respond to a specified situation or as a reply to an existing email",
        "action": "composeEmail",
        "parameters": {
          "situation": "string | describe the situation for which an email must be written",
          "outcome": "string | describe the outcome that is expected after sending this email",
          "original_email": "string | (optional) provide original email for which a reply must be generated"
        }
      },
      {
        "skill-name": "shortMessage",
        "objective": "write a short message (SMS) suitable for mobile phone conversations or social media messengers, such as, LinkedIn, Twitter, etc.",
        "action": "shortMessage",
        "parameters": {
          "situation": "string | describe the situation for which this message must be written",
          "outcome": "string | describe the outcome that is expected after sending this message",
          "original_message": "string | (optional) provide original message for which a reply must be generated"
        }
      },
      {
        "skill-name": "writeStory",
        "objective": "produce a fictional story based on the given plot / idea",
        "action": "writeStory",
        "parameters": {
          "plot": "string | use this plot as a reference to create new story"
        }
      }
    ],
    "config": {}
  },
  {
    "agent-name": "MedAssistant",
    "capability": "Provide preliminary analysis based on given health conditions.",
    "skills": [
      {
        "skill-name": "diagnose",
        "objective": "Determine preliminary differential diagnosis, additional diagnostic tests, and care plan based on provided notes",
        "action": "diagnose",
        "parameters": {
          "notes": "string | notes containing medical symptoms, conditions, vitals, history and any other useful information to aid diagnosis"
        }
      }
    ],
    "config": {}
  }
]